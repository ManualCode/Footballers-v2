@using Footballers_v2.Enums
@model Footballer
@{ var TeamNames = @ViewData["ListTeamNames"] as List<string>;}

<h1>Edit Footballer</h1>


@if (Model is null)
{
    <p>Такого футболиста у нас нету</p>
}
else
{
    <form method="post">
        <label asp-for="Id"></label>
        <input asp-for="Id" readonly />

        <label asp-for="FirstName"></label>
        <input asp-for="FirstName" />
        <span asp-validation-for="FirstName"></span>

        <label asp-for="LastName"></label>
        <input asp-for="LastName" />
        <span asp-validation-for="LastName"></span>

        <label asp-for="Gender"></label>
        <div class="radio_button">
            <div class="radio_button_content">
                <input type="radio" asp-for="Gender" name="Gender" value="Мужчина" />
                <span>Мужчина</span>
            </div>
            <div class="radio_button_content">
                <input type="radio" asp-for="Gender" name="Gender" value="Женщина" />
                <span>Женщина</span>
            </div>
        </div>
        <span asp-validation-for="Gender"></span>

        <label asp-for="Birthday"></label>
        <input type="date" asp-for="Birthday" />
        <span asp-validation-for="Birthday"></span>

        <label asp-for="TeamName"></label>
        <div class="dropdown">
            <input type="text" asp-for="TeamName" />
            <select onchange="this.previousElementSibling.value=this.value; this.previousElementSibling.focus()">
                @if (@TeamNames is not null)
                    @foreach (string el in @TeamNames) {<option>@el</option>}
            </select>
        </div>
        <span asp-validation-for="TeamName"></span>

        <label asp-for="Country"></label>
        <select asp-for="Country" asp-items="@Html.GetEnumSelectList(typeof(Country))">
            <option hidden selected>@Model.Country</option>
        </select>
        <span asp-validation-for="Country"></span>

        <input class="btn btn-primary" id="sendBtn" type="submit" value="Отправить" />
        <input class="btn btn-danger"  id="delete"  type="submit" asp-action="Delete" asp-controller="Footballers" value="Удалить" />
    </form>
}


<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.js"></script>
<script>
    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/football")
        .build();
    document.getElementById("sendBtn").addEventListener("click", function () {
        let formData = {
            id: document.querySelector("input[name='Id']").value,
            firstName: document.querySelector("input[name='FirstName']").value,
            lastName: document.querySelector("input[name='LastName']").value,
            gender: document.querySelector("input[name='Gender']:checked").value,
            birthday: document.querySelector("input[name='Birthday']").value,
            teamName: document.querySelector("input[name='TeamName']").value,
            country: document.querySelector("select[name='Country']").value
        };

        hubConnection.invoke("Editor", formData)
            .catch(function (err) {
                return console.error(err.toString());
            });
    });

    document.getElementById("delete").addEventListener("click", function () {
        let id = document.querySelector("input[name='Id']").value;
        hubConnection.invoke("Deleter", id)
            .catch(function (err) {
                return console.error(err.toString());
            });
    });

    hubConnection.start()
        .then(function () {
            document.getElementById("sendBtn").disabled = false;
        })
        .catch(function (err) {
            return console.error(err.toString());
        });
</script>